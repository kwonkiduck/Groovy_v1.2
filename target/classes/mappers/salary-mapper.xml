<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.groovy.salary.SalaryMapper">
    <select id="loadSalary" resultType="annualSalaryVO">
        SELECT
            ANSLRY_STDR_YEAR,
            COMMON_CODE_DEPT_CRSF,
            COMMON_CODE_DEPT_CRSF AS ORIGINAL_CODE,
            ANSLRY_ALLWNC
        FROM
            ANSLRY
        WHERE
            COMMON_CODE_DEPT_CRSF LIKE 'DEPT%'
    </select>
    <select id="loadBonus" resultType="annualSalaryVO">
        SELECT ANSLRY_STDR_YEAR,
               COMMON_CODE_DEPT_CRSF,
               COMMON_CODE_DEPT_CRSF AS ORIGINAL_CODE,
               ANSLRY_ALLWNC
        FROM ANSLRY
        WHERE COMMON_CODE_DEPT_CRSF LIKE 'CLSF%'
        ORDER BY COMMON_CODE_DEPT_CRSF DESC
    </select>
    <select id="loadTariff" parameterType="String" resultType="tariffVO">
        SELECT TARAT_STDR_YEAR,
                TARAT_STDR_NM,
                TARAT_STDR_VALUE,
                TARAT_STDR_CODE,
                TARAT_STDR_USE_AT
        FROM
        TARAT_STDR
        WHERE
        TARAT_STDR_YEAR =
        <choose>
            <when test="year != null and year !=''">
                #{year}
            </when>
            <otherwise>
                TO_CHAR(SYSDATE, 'yyyy')
            </otherwise>
        </choose>
        ORDER BY TARAT_STDR_NM ASC
    </select>
    <select id="loadEmpList" resultType="employeeVO">
        SELECT EMPL_ID,
               EMPL_NM,
               COMMON_CODE_DEPT,
               COMMON_CODE_CLSF,
               COMMON_CODE_DEPT AS DEPT_NM,
               COMMON_CODE_CLSF AS CLSF_NM
        FROM EMPL
    </select>
    <select id="loadPaymentList" parameterType="String" resultType="salaryVO">
        SELECT S.SALARY_PYMNT_DATE,
               S.SALARY_EMPL_ID,
               S.SALARY_BSLRY,
               S.SALARY_OVTIME_ALLWNC,
               E.EMPL_NM
        FROM SALARY S,
             EMPL E
        WHERE S.SALARY_EMPL_ID = E.EMPL_ID
          AND SALARY_EMPL_ID = #{emplId}
          AND TO_CHAR(SALARY_PYMNT_DATE, 'YYYY') = #{year}
    </select>

    <insert id="inputSalary" parameterType="String">
        INSERT INTO SALARY(SALARY_PYMNT_DATE, SALARY_EMPL_ID, SALARY_BSLRY, SALARY_OVTIME_ALLWNC)
        WITH TOTAL_OVERTIME AS (SELECT SUM(CASE
                                               WHEN D.DCLZ_DAIL_WORK_TIME > 8 THEN D.DCLZ_DAIL_WORK_TIME - 8
                                               ELSE 0 END) AS TOTAL_OVERTIME
                                FROM DCLZ D
                                WHERE TO_CHAR(D.DCLZ_WORK_DE, 'YYYY-MM') =
                                      TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                                  AND D.DCLZ_EMPL_ID = #{emplId})
        SELECT TO_DATE(TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYY-MM') || '-10',
                       'YYYY-MM-DD') AS SALARY_PYMNT_DATE,
               #{emplId}             AS SALARY_EMPL_ID,
               SUM(TRUNC((CASE
                              WHEN A.COMMON_CODE_DEPT_CRSF = E.COMMON_CODE_DEPT
                                  OR A.COMMON_CODE_DEPT_CRSF = E.COMMON_CODE_CLSF
                                  THEN A.ANSLRY_ALLWNC
                              ELSE 0
                   END) / 12, 0))    AS SALARY_BSLRY,
               SUM(TRUNC((CASE
                              WHEN A.COMMON_CODE_DEPT_CRSF = E.COMMON_CODE_DEPT
                                  OR A.COMMON_CODE_DEPT_CRSF = E.COMMON_CODE_CLSF
                                  THEN A.ANSLRY_ALLWNC
                              ELSE 0
                   END) / 12 / 30 / 8 * ((TOTAL_OVERTIME * 1.5)), 0
                   ))                AS SALARY_OVTIME_ALLWNC
        FROM EMPL E
                 JOIN ANSLRY A ON A.COMMON_CODE_DEPT_CRSF = E.COMMON_CODE_DEPT
                 CROSS JOIN TOTAL_OVERTIME
        WHERE E.EMPL_ID = #{emplId}
        GROUP BY TO_DATE(TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYY-MM') || '-10', 'YYYY-MM-DD'), #{emplId};
    </insert>

    <select id="loadRecentPaystub" parameterType="String" resultType="paystubVO">
        SELECT SALARY_DTSMT_ETPR_CODE,
               SALARY_DTSMT_ISSU_DATE,
               SALARY_EMPL_ID,
               SALARY_DTSMT_DDC_TOTAMT,
               SALARY_DTSMT_PYMNT_TOTAMT,
               SALARY_DTSMT_NET_PAY,
               SALARY_DTSMT_SIS_NP,
               SALARY_DTSMT_SIS_HI,
               SALARY_DTSMT_SIS_EI,
               SALARY_DTSMT_SIS_WCI,
               SALARY_DTSMT_INCMTAX,
               SALARY_DTSMT_LOCALITY_INCMTAX,
               SALARY_BSLRY,
               SALARY_OVTIME_ALLWNC
        FROM (SELECT SD.SALARY_DTSMT_ETPR_CODE,
                     SD.SALARY_DTSMT_ISSU_DATE,
                     SD.SALARY_EMPL_ID,
                     SD.SALARY_DTSMT_DDC_TOTAMT,
                     SD.SALARY_DTSMT_PYMNT_TOTAMT,
                     SD.SALARY_DTSMT_NET_PAY,
                     SD.SALARY_DTSMT_SIS_NP,
                     SD.SALARY_DTSMT_SIS_HI,
                     SD.SALARY_DTSMT_SIS_EI,
                     SD.SALARY_DTSMT_SIS_WCI,
                     SD.SALARY_DTSMT_INCMTAX,
                     SD.SALARY_DTSMT_LOCALITY_INCMTAX,
                     S.SALARY_BSLRY,
                     S.SALARY_OVTIME_ALLWNC
              FROM SALARY_DTSMT SD, SALARY S
              WHERE SD.SALARY_EMPL_ID = #{emplId}
                AND SD.SALARY_DTSMT_ISSU_DATE = S.SALARY_PYMNT_DATE
              ORDER BY SD.SALARY_DTSMT_ISSU_DATE DESC)
        WHERE ROWNUM = 1
    </select>
    
    <select id="loadYearsForSortPaystub" parameterType="String" resultType="int">
        SELECT EXTRACT(YEAR FROM SALARY_DTSMT_ISSU_DATE) FROM SALARY_DTSMT
        WHERE SALARY_EMPL_ID = #{emplId}
        GROUP BY EXTRACT(YEAR FROM SALARY_DTSMT_ISSU_DATE)
        ORDER BY EXTRACT(YEAR FROM SALARY_DTSMT_ISSU_DATE) DESC
    </select>

    <select id="loadPaystubList" parameterType="String" resultType="paystubVO">
        SELECT SALARY_DTSMT_ETPR_CODE,
               SALARY_DTSMT_ISSU_DATE,
               SALARY_DTSMT_NET_PAY
        FROM SALARY_DTSMT
        WHERE SALARY_EMPL_ID = #{emplId}
          AND EXTRACT(YEAR FROM SALARY_DTSMT_ISSU_DATE) = #{year}
        ORDER BY SALARY_DTSMT_ISSU_DATE DESC
    </select>

    <update id="modifyIncmtax" parameterType="map">
        /* 세율 기준 수정 */
        UPDATE TARAT_STDR
        SET TARAT_STDR_VALUE = #{value}
        WHERE TARAT_STDR_CODE = #{code}
    </update>
    <update id="modifySalary" parameterType="map">
        /* 세율 기준 수정 */
        UPDATE ANSLRY
        SET ANSLRY_ALLWNC = #{value}
        WHERE COMMON_CODE_DEPT_CRSF = #{code}
    </update>
</mapper>
